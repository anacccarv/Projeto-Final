lm3 <- lm(sev ~time + time2,
data = check)
summary(lm3)
hist(residuals(lm3))
AIC(lm3)
fungi |>
ggplot(aes(time, sev))+
geom_point()+
geom_smooth(method = "lm",
se = FALSE,
formula = y ~poly(x,2),
color = "black")+
geom_smooth(se = FALSE)
fungi$time2 <- fungi$time^2
qmf <- lm(sev ~time + time2,
data = fungi)
summary(qmf)
hist(residuals(qmf))
AIC(qmf)
bioA |>
ggplot(aes(time, sev))+
geom_point()+
geom_smooth(method = "lm",
se = FALSE,
formula = y ~poly(x,2),
color = "black")+
geom_smooth(se = FALSE)
bioA$time2 <- bioA$time^2
qma <- lm(sev ~time + time2,
data = bioA)
summary(qma)
hist(residuals(qma))
AIC(qma)
bioB |>
ggplot(aes(time, sev))+
geom_point()+
geom_smooth(method = "lm",
se = FALSE,
formula = y ~poly(x,2),
color = "black")+
geom_smooth(se = FALSE)
bioB$time2 <- bioB$time^2
qmb <- lm(sev ~time + time2,
data = bioB)
summary(qmb)
hist(residuals(qmb))
AIC(qmb)
library(epifitter)
tomate3 <- dados |>
filter(host == "Tomato") |>
filter(specie == "A. solani") |>
group_by(product, rep, isolate) |>
summarise(aacpd = AUDPC(time, sev))
tomate3 <- tomate |>
group_by(product, rep, isolate) |>
summarise(aacpd = AUDPC(time, sev))
View(tomate3)
View(tomate3)
m_tomate3 <- lm(aacpd ~ product, data = tomate3)
anova(m_tomate3)
tomate3 |>
ggplot(aes(product, aacpd, color = product)) +
geom_boxplot() +
scale_x_discrete(limits = c("Check", "Bio agent B", "Fungicide", "Bio agent A")) +
labs(x = "Produto",
y = "AACPD",
color = "Produto") +
theme_classic() +
theme(legend.position = "top")
medias_tomate3 <- emmeans(m_tomate3, ~ product)
cld(medias_tomate3, Letters = letters)
View(tom28)
correlacao <- tomate28 |>
ggplot(aes(sev, yield_f))+
geom_point()+
geom_smooth(method = "lm")
correlacao <- tom28 |>
ggplot(aes(sev, yield_f))+
geom_point()+
geom_smooth(method = "lm")
View(correlacao)
correlacao
tom28 |>
ggplot(aes(sev, yield_f))+
geom_point()+
geom_smooth(method = "lm")+
labs(x = "Produto",
y = "Severidade (%)",
color = "Isolado" )+
theme_clean()
tom28 |>
ggplot(aes(sev, yield_f))+
geom_point()+
geom_smooth(method = "lm")+
labs(x = "Produtividade final",
y = "Severidade")+
facet_wrap(~product)
tom28 |>
ggplot(aes(sev, yield_f))+
geom_point()+
geom_smooth(method = "lm")+
labs(x = "Severidade",
y = "Produtividade final")+
facet_wrap(~product)
tom28 |>
ggplot(aes(sev, yield_f))+
geom_point()+
geom_smooth(method = "lm")+
labs(x = "Severidade",
y = "Produtividade final")
img |>
pivot_longer(3:5, names_to = "method",
values_to = "value") |>
ggplot(aes(method, value))+
geom_boxplot()
tom28 |>
ggplot(aes(product, yield_f))+
geom_boxplot()
tom28 |>
ggplot(aes(product, yield_f))+
geom_boxplot()+
labs(x = "Produto",
y = "Produtividade final")+
theme_clean()
tom28 |>
ggplot(aes(product, yield_f, color = product))+
geom_boxplot()+
labs(x = "Produto",
y = "Produtividade final")+
theme_clean()
tom28 |>
ggplot(aes(product, yield_f, color = product))+
geom_boxplot()+
labs(x = "Produto",
y = "Produtividade final")+
theme_clean()+
theme(legend.position = "top")
tom28 |>
ggplot(aes(product, yield_f, color = product))+
geom_boxplot()+
labs(x = "Produto",
y = "Produtividade final",
color = Product)+
theme_clean()+
theme(legend.position = "top")
tom28 |>
ggplot(aes(product, yield_f, color = product))+
geom_boxplot()+
labs(x = "Produto",
y = "Produtividade final",
color = "Product")+
theme_clean()+
theme(legend.position = "top")
tom28 |>
ggplot(aes(product, yield_f, color = product))+
geom_boxplot()+
labs(x = "Produto",
y = "Produtividade final",
color = "Produto")+
theme_clean()+
theme(legend.position = "top")
library(AgroR)
corgraph(tom28)
tom28_2 <- tom28 |>
pivot_wider((names_from = product,
tom28_2 <- tom28 |>
pivot_wider((names_from = product,
tom28_2 <- tom28 |>
pivot_wider((names_from = "product",
tom28_2 <- tom28 |>
pivot_wider((names_from = product, values_from = sev))
tom28_2 <- tom28 |>
pivot_wider(names_from = product, values_from = sev)
View(tom28_2)
tom28_2 <- tom28 |>
pivot_wider(names_from = product, values_from = sev,
names_from = product, values_from = yield_f)
# Primeira tabela com 'sev'
tom28_sev <- tom28 |>
pivot_wider(names_from = product, values_from = sev)
# Segunda tabela com 'yield_f'
tom28_yield <- tom28 |>
pivot_wider(names_from = product, values_from = yield_f)
# Unir as duas tabelas
tom28_combined <- left_join(tom28_sev, tom28_yield, by = c("ID", "isolate", "rep", "time"))
View(tom28_combined)
corgraph(tom28_combined)
tom28_2 <- tom28 |>
select(sev, yield_f)
tom28_2 <- tom28 |>
dplyr::select(sev, yield_f)
corgraph(tom28_2)
tom28_2 <- tom28 |>
filter(product == "Check") |>
dplyr::select(sev, yield_f)
corgraph(tom28_2)
tom28_2 <- tom28 |>
filter(product == "Fungicide") |>
dplyr::select(sev, yield_f)
corgraph(tom28_2)
tom28_2 <- tom28 |>
dplyr::select(sev, yield_f)
corgraph(tom28_2)
cor.test(tom28_2$yield_f, tom28_2$sev)
library(dplyr)
library(ggplot2)
library(AgroR)
library(ggthemes)
# Lista de produtos
produtos <- unique(tom28$product)
# Função para realizar a correlação por produto
analise_correlacao <- function(produto) {
dados_produto <- tom28 |> filter(product == produto)
cor_resultado <- cor.test(dados_produto$yield_f, dados_produto$sev)
# Gráfico de correlação
corgraph(dados_produto |> select(sev, yield_f))
return(cor_resultado)
}
# Realizando a análise para cada produto
resultados_correlacao <- lapply(produtos, analise_correlacao)
dados_produto <- tom28 |> filter(product == produto)
# Lista de produtos
produtos <- unique(tom28$product)
produtos
# Função para realizar a correlação por produto
analise_correlacao <- function(produto) {
dados_produto <- tom28 |> filter(product == produto)
cor_resultado <- cor.test(dados_produto$yield_f, dados_produto$sev)
# Gráfico de correlação
corgraph(dados_produto |> select(sev, yield_f))
return(cor_resultado)
}
corgraph(dados_produto |> select(sev, yield_f))
tom28_check <- tom28 |>
filter(product == "Check")
cor.test(tom28_check$yield_f, tom28_check$sev)
tom28_check <- tom28 |>
filter(product == "Check")
dplyr::select(sev, yield_f)
View(tom28)
dplyr::select(sev, yield_f)
tom28_2 <- tom28 |>
dplyr::select(sev, yield_f)
tom28_check <- tom28 |>
filter(product == "Check")
tom28_check <- tom28 |>
filter(product == "Check") |>
dplyr::select(sev, yield_f)
corgraph(tom28_check)
tom28_check <- tom28 |>
filter(product == "Bio fungicide A") |>
dplyr::select(sev, yield_f)
tom28_bioA <- tom28 |>
filter(product == "Bio fungicide A") |>
dplyr::select(sev, yield_f)
corgraph(tom28_bioA)
tom28_bioA <- tom28 |>
filter(product == "Bio fungicide A") |>
dplyr::select(sev, yield_f)
corgraph(tom28_bioA)
View(tom28_bioA)
View(tom28_check)
View(tom28_2)
View(tom28)
tom28_bioA <- tom28 |>
filter(product == "Bio agent A") |>
dplyr::select(sev, yield_f)
corgraph(tom28_bioA)
cor.test(tom28_bioA$yield_f, tom28_bioA$sev)
corgraph(tom28_bioA)
### Gráfico de Dispersão com Regressão Linear
library(gsheet)
library(tidyverse)
library(car)
library(DHARMa)
library(performance)
library(ggthemes)
library(emmeans)
library(multcomp)
library(multcompView)
library(epifitter)
library(AgroR)
dados <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1HI1PqYYMyvwvLhMfAAs7eyA2zCqTBwQdyGtw-ILn7fU/edit?usp=sharing")
tomate <- dados |>
filter(host == "Tomato",
specie == "A. solani") |>
mutate(time = as.numeric(time),
rep = as.factor(rep),
isolate = as.factor(isolate),
sev = as.numeric(sev),
yield_f = as.numeric(yield_f),
product = as.factor(product)) |>
dplyr::select(ID, isolate, product, rep, time, sev, yield_f)
tom28 <- tomate |>
filter(time == 28)
anova <- lm(sev ~ product*isolate,
data = tom28)
anova(anova)
check_normality(anova)
check_heteroscedasticity(anova)
plot(simulateResiduals(anova))
hist(residuals(anova))
anova1 <- lm(log(sev) ~ product*isolate,
data = tom28)
anova(anova1)
check_normality(anova1)
check_heteroscedasticity(anova1)
plot(simulateResiduals(anova1))
hist(residuals(anova1))
tom_logit <- tom28 |>
mutate(logit = logit(sev))
anova2 <- lm(logit ~ product*isolate,
data = tom_logit)
anova(anova2)
check_normality(anova2)
check_heteroscedasticity(anova2)
plot(simulateResiduals(anova2))
hist(residuals(anova2))
# emmeans
medias_tom <- emmeans(anova2, ~ product)
medias_tom
#performance
cld(medias_tom, Letters = LETTERS)
tomate|>
ggplot(aes(time, sev))+
geom_jitter(width = 0.05, color = "lightgrey")+
stat_summary(fun.data = "mean_cl_boot", size = 0.5, color = "black",
alpha = 0.5)+
geom_smooth(method = lm,
se = FALSE)+
facet_wrap(~product)
check <- tomate |>
dplyr::filter(product == "Check")
check |>
ggplot(aes(time, sev))+
geom_point()+
stat_summary(fun.data = "mean_cl_boot", size = 0.5, color = "black",
alpha = 0.5)+
ylim(0,1)+
geom_smooth(method = lm,
se = FALSE)
lmc <- lm(sev ~time,
data = check)
summary(lmc)
AIC(lmc)
fungi <- tomate |>
dplyr::filter(product == "Fungicide")
fungi |>
ggplot(aes(time, sev))+
geom_point()+
stat_summary(fun.data = "mean_cl_boot", size = 0.5, color = "black",
alpha = 0.5)+
ylim(0,1)+
geom_smooth(method = lm,
se = FALSE)
lmf <- lm(sev ~time,
data = fungi)
summary(lmf)
bioA <- tomate |>
dplyr::filter(product == "Bio agent A")
bioA |>
ggplot(aes(time, sev))+
geom_point()+
stat_summary(fun.data = "mean_cl_boot", size = 0.5, color = "black",
alpha = 0.5)+
ylim(0,1)+
geom_smooth(method = lm,
se = FALSE)
lma <- lm(sev ~time,
data = bioA)
summary(lma)
AIC(lma)
bioB <- tomate |>
dplyr::filter(product == "Bio agent B")
bioB |>
ggplot(aes(time, sev))+
geom_point()+
stat_summary(fun.data = "mean_cl_boot", size = 0.5, color = "black",
alpha = 0.5)+
ylim(0,1)+
geom_smooth(method = lm,
se = FALSE)
lmb <- lm(sev ~time,
data = bioB)
summary(lmb)
AIC(lmb)
check |>
ggplot(aes(time, sev))+
geom_point()+
geom_smooth(method = "lm",
se = FALSE,
formula = y ~poly(x,2),
color = "black")+
geom_smooth(se = FALSE)
check$time2 <- check$time^2
lm3 <- lm(sev ~time + time2,
data = check)
summary(lm3)
hist(residuals(lm3))
AIC(lm3)
fungi |>
ggplot(aes(time, sev))+
geom_point()+
geom_smooth(method = "lm",
se = FALSE,
formula = y ~poly(x,2),
color = "black")+
geom_smooth(se = FALSE)
fungi$time2 <- fungi$time^2
qmf <- lm(sev ~time + time2,
data = fungi)
summary(qmf)
hist(residuals(qmf))
AIC(qmf)
bioA |>
ggplot(aes(time, sev))+
geom_point()+
geom_smooth(method = "lm",
se = FALSE,
formula = y ~poly(x,2),
color = "black")+
geom_smooth(se = FALSE)
bioA$time2 <- bioA$time^2
qma <- lm(sev ~time + time2,
data = bioA)
summary(qma)
hist(residuals(qma))
AIC(qma)
bioB |>
ggplot(aes(time, sev))+
geom_point()+
geom_smooth(method = "lm",
se = FALSE,
formula = y ~poly(x,2),
color = "black")+
geom_smooth(se = FALSE)
bioB$time2 <- bioB$time^2
qmb <- lm(sev ~time + time2,
data = bioB)
summary(qmb)
hist(residuals(qmb))
AIC(qmb)
tomate3 <- tomate |>
group_by(product, rep, isolate) |>
summarise(aacpd = AUDPC(time, sev))
tomate3 |>
ggplot(aes(product, aacpd, color = product)) +
geom_boxplot() +
scale_x_discrete(limits = c("Check", "Bio agent B", "Fungicide", "Bio agent A")) +
labs(x = "Produto",
y = "AACPD",
color = "Produto") +
theme_classic() +
theme(legend.position = "top")
m_tomate3 <- lm(aacpd ~ product, data = tomate3)
anova(m_tomate3)
medias_tomate3 <- emmeans(m_tomate3, ~ product)
cld(medias_tomate3, Letters = letters)
anova28 <- lm(yield_f ~ product*isolate,
data = tom28)
anova(anova28)
check_normality(anova28)
check_heteroscedasticity(anova28)
plot(simulateResiduals(anova28))
hist(residuals(anova28))
# emmeans
medias_tom28 <- emmeans(anova28, ~ product)
medias_tom28
#performance
cld(medias_tom28, Letters = LETTERS)
tom28 |>
ggplot(aes(sev, yield_f))+
geom_point()+
geom_smooth(method = "lm")+
labs(x = "Severidade",
y = "Produtividade final")+
facet_wrap(~product)+
theme_clean()
tom28 |>
ggplot(aes(product, yield_f, color = product))+
geom_boxplot()+
labs(x = "Produto",
y = "Produtividade final",
color = "Produto")+
theme_clean()+
theme(legend.position = "top")
tom28_2 <- tom28 |>
dplyr::select(sev, yield_f)
corgraph(tom28_2)
cor.test(tom28_2$yield_f, tom28_2$sev)
tom28_check <- tom28 |>
filter(product == "Check") |>
dplyr::select(sev, yield_f)
# Gráfico de correlação para Check
corgraph(tom28_check)
# Teste de correlação para Check
cor.test(tom28_check$yield_f, tom28_check$sev)
tom28_bioA <- tom28 |>
filter(product == "Bio agent A") |>
dplyr::select(sev, yield_f)
# Gráfico de correlação para Bio agent A
corgraph(tom28_bioA)
# Teste de correlação para Bio agent A
cor.test(tom28_bioA$yield_f, tom28_bioA$sev)
tom28 |>
ggplot(aes(sev, yield_f))+
geom_point()+
geom_smooth(method = "lm")+
labs(x = "Severidade",
y = "Produtividade final")+
theme_clean()
quarto render
